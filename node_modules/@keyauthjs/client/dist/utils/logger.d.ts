export interface keyauthLogger {
    active?: boolean;
    level?: "error" | "warning" | "info" | "debug" | "dev";
    name?: string;
}
/**
 * CustomLogger class for creating and configuring a custom logger based on Winston.
 * Used in the logging for keyauth ClientAPI
 */
export default class CustomLogger {
    private _logger;
    private _name;
    /**
     * Constructs a CustomLogger instance.
     * @param {keyauthLogger} options - The logger options.
     * @param {string} options.name - The logger name.
     * @param {boolean} options.active - Whether the logger is active or not.
     * @param {string} options.level - The logging level (e.g., "error", "info").
     */
    constructor(options: keyauthLogger);
    /**
     * Log an error message.
     * @param {string} tag - The log tag.
     * @param {string} message - The error message.
     */
    error(tag: string, message: string): void;
    /**
     * Log a warning message.
     * @param {string} tag - The log tag.
     * @param {string} message - The warning message.
     */
    warning(tag: string, message: string): void;
    /**
     * Log an info message.
     * @param {string} tag - The log tag.
     * @param {string} message - The info message.
     */
    info(tag: string, message: string): void;
    /**
     * Log a debug message.
     * @param {string} tag - The log tag.
     * @param {string} message - The debug message.
     */
    debug(tag: string, message: string): void;
}
//# sourceMappingURL=logger.d.ts.map