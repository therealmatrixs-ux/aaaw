interface EmbedOptionsBase {
    color?: number;
    description?: string;
    timestamp?: string;
    title?: string;
    url?: string;
}
export interface EmbedOptions extends EmbedOptionsBase {
    author?: EmbedAuthorOptions;
    fields?: Array<EmbedField>;
    footer?: EmbedFooterOptions;
    image?: EmbedImageOptions;
    thumbnail?: EmbedImageOptions;
}
interface EmbedAuthorOptions extends EmbedAuthorBase {
    iconURL?: string;
}
interface EmbedAuthorBase {
    name: string;
    url?: string;
}
interface EmbedField {
    inline?: boolean;
    name: string;
    value: string;
}
interface EmbedFooterOptions extends EmbedFooterBase {
    iconURL?: string;
}
interface EmbedFooterBase {
    text: string;
}
interface EmbedImageOptions {
    url: string;
}
export default class EmbedBuilder {
    private _content;
    private _embeds;
    constructor({ content, embeds, }: {
        content?: string | undefined;
        embeds?: EmbedOptions[] | undefined;
    });
    toStrting(): string;
    toJSON(): {
        content: string | undefined;
        embeds: EmbedOptions[] | undefined;
    };
}
export {};
//# sourceMappingURL=embedBuilder.d.ts.map